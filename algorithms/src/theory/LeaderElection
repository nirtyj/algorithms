
Bully Algorithm:

- A node on detecting that Leader doesn't respond to its pings starts its election algorithm
- tries to elect itself as a leader
- sends out message, saying if there is any highest PID, respond to me.
- if None,
      sends out elected message saying I am the leader to all nodes.
- if Comes back with a node id, 
      that node takes over, runs the leader election routine.
      

Leader election in a ring:

O(n^2):

- All nodes for a unidirected ring where it communicates to one neighbor.
- Node sends out a message saying this is my current ID to left
- when receive an id j (from the right):
  if j > id then
	forward j to the left (this processor has lost)
  if j = id then
	elect self (this processor has won)
  if j < id then 
	do nothing

ZooKeeper Election:

Lowest number in sequence gets selected as leader.
A Node while joining gets a new sequence number.
It follows only previous low sequence number

Let ELECTION be a path of choice of the application. To volunteer to be a leader:

Create znode z with path "ELECTION/guid-n_" with both SEQUENCE and EPHEMERAL flags;
Let C be the children of "ELECTION", and i be the sequence number of z;
Watch for changes on "ELECTION/guid-n_j", where j is the largest sequence number such that j < i and n_j is a znode in C;

Upon receiving a notification of znode deletion:

Let C be the new set of children of ELECTION;
If z is the smallest node in C, then execute leader procedure;
Otherwise, watch for changes on "ELECTION/guid-n_j", where j is the largest sequence number such that j < i and n_j is a znode in C;
      
https://github.com/shashank88/system_design
https://github.com/andreis/interview
https://dev.to/fahimulhaq/top-10-system-design-interview-questions-for-software-engineers

